Конспект

1. JS различает регистр !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
2. Всегда открыта консоль !!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
3. JS все равно какие кавычки использовать. Но должны закрываться одинаковыми кавычками

4. Любая текстовая информация должна быть в кавычках
5. Нет никаких преград в том, что мы творим!
6. обьект.
7. в JS - все обекты



Свойства - это какая-то характеристика (когда нет скобок) // 
Метод - это действие (записать и считать), что-то делают
в JS все является обьекатми

blabla.haha
blabla - обьект
haha - свойства
blabla.haha() - метод

----------------------
alert ('hello');  //выводит всплывающее окно
console.log ('Hi'); // вывод в консоль
document.getElementById('out'); // получить элемент по id 

var b = document.getElementById('body'); // обращение к элементу по id 
var b = document.querySelector('p'); // обращение к элементу по селектору css
// если есть несколько тэгов <p> , и вставить ('p') - выберет первый тэг <p> в тексте

обьект.innerHTML // содержимое между двуям !!!ПАРНЫМИ!!! тегами





document.getElementById('out').innerHTML = elem.innerHTML

elem.id; // вывести или записать id обьекта
elem.className; // вывести или записать класс обьекта
elem. innerText; // без тэгов


// добавления события к кнопке

document.getElementById('btn').onclick = pushMe;

function pushMe() {
	console.log('work baby!!!!');
	console.log(inp.value);   // для считывания или записи елементов input
}


конкатенация - 
моск - не мандаринка


alert(k); = (q.value) //считывает число, введенное в инпут (например нужно умнодить или поделить какие-то числа)



-------------------------------------       Оператор ветвления     -------------------------------------------------

if (условие) {
//команды которые выполняются
//если услове верно
comman1;
comman2;
}

Пример

( == означает равенство. то есть а равно b)
( != означает не равно. то есть а не равно b)
a==b 	// равенство false
a!=b 	// равенство true
a >= 	// больше либо равно
a <= 	// меньше либо равно
  >
  <
  && 	// и
  || 	// или 

Сравнение по значению и пот типу

a = 5;
b = '5';
a == b // true
a === b // false


a = 'Hi';
b = 'hi';
a!=b


в var можно присвоить несколько значений
var a = true
var a = false




-----------------------------------------    ЦИКЛЫ         ----------------------------------------------------------------

используется для одного действия - использовать однократное повторение

3 вида циклов:

1 - for

									<p id="out"> </p>

for ( var i = 0; i < 7;  i++) {
	document.getElementById('out').innerHTML+=i;

}


i - "счетчик цикла"
+= // означает "дописать" (к нулю дописать 1, к 1 дописать 1, к 2 дописать 1...)



ЦИКЛ С ЗАДАННЫМ КОЛИЧЕСТВОМ ПОВТОРЕНИЙ ЧЕРЕЗ ОПРЕДЕЛЕННЫЙ ИНТЕРВАЛ (ДО 258 ЧЕРЕЗ КАЖДЫЕ 2)
var u = document.getElementById('out');

for (var i=0;i<=258;i=i+2) {
	u.innerHTML+=i + ' ';
}


ПРЕРЫВАЕТ ЦИКЛ И УЙТИ С НЕГО
if (i==8) { 
		break; 
	}



ПРЕРЫВАНИЕ ТЕКУЩЕГО КРУГА ЦИКЛА
if (i==8) { 
		continue; 
	}

64 раза повторить действие (1.2.4.8...)

var p = document.getElementById('et');
var a = 1;
for (var i=1;i<65;i++) {
	p.innerHTML+=i + ')---' + a + '<br>';
	a=a*2


}



!!!!!!!!!!!!!!!!!!   ЗАДАЧА
ЕСЛИ ЧИСЛО 10
НАЙТИ СУММУ 1+2+3+4+5+6...+10


за циклом обьявить пустую переменную и добавлять число



---------------------------------------------------------- МАСИВЫ ----------------------------------------------------------



Масив - упорядоченые данные (чего-то)

var t = [];      ПУСТОЙ МАСИВ
var temp = [12, 14, 31, 30, -7];              индексный (простой) масив
console.log(temp [2]);

нумерация индекса масива всегда с 0
12 - 0 индекс
14 - первый индекс масива
в консоль выведет число 31




// СТАНДАРТНЫЙ ШАБЛОНЫ ВЫВОДЫ МАСИВА

outArray(); // строкой запускаем функцию
function outArray() {
	var out = '';
	for (var i=0; i<temp.length; i++) {
		if (temp [i] != undefined) {
			out += i + ' --- ' + temp[i] + '<br>';
		}
	}
	document.getElementById('out').innerHTML=out;
}






push позволяет добавлять строки в незанятый индекс масива 





---------------------------------------------- АССОЦИАТИВНЫЕ МАСИВЫ ------------------------------------------------


var goods = {};


слева - значение
справа - свойства



обращаться к элементу масива
console.log(goods.name)


//console.log(goods.hello); //меньше мороки
//console.log(goods['hello mama']); // универсальный


var a = 'cost'; //переменная a
console.log(goods[a]); // ключ переменной 'hello mama'




как будут выводиться ключи - зависит от браузера
(если подключать по проядку - подключать библиотеки)



-----------------------------------------------------------------------------------------------------------------------




---------------------------------------------- ФУНКЦИИ В JAVASCRIPT-----------------------------------------------------



ФУНКЦИЯ - фрагмент програмного кода, к которому можна обратиться из другого места программы. 
основная задача - избавиться от повтороения кода


замыкание - 



переменные специальные
this - 
arguments - 






